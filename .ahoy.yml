---
ahoyapi: v2

commands:
  build:
    usage: Build project.
    cmd: docker-compose up -d --build "$@"

  up:
    usage: Build project.
    cmd: docker-compose up -d "$@"

  down:
    usage: Delete project.
    cmd: docker-compose down

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps

  config:
    usage: Show Docker configs.
    cmd: docker-compose config

  cli:
    usage: Start a shell inside cli container.
    cmd: docker-compose exec cli bash

  install:
    usage: Install the profile.
    cmd: docker-compose exec -T cli drush si -y govcms --site-name="Welcome to GovCMS" --account-name=admin --account-pass=password "$@"

  login:
    usage: Login to a website.
    cmd: docker-compose exec -T cli drush uli "$@"

  test-cypress-run:
    usage: Run Cypress tests.
    cmd: docker-compose up --exit-code-from cypress

  test-cypress-open:
    usage: Run tests with interactive mode.
    cmd: docker-compose -f docker-compose.yml -f cy-open.yml up --exit-code-from cypress

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec cli bash -c 'drush sql-drop' &&
        docker-compose exec -T cli bash -c 'drush sql-cli' < "$@"
      else echo "Provided sql file" "$@" "does not exist"
      fi

  mysql-dump:
    usage: Dump data out into a file. `ahoy mysql-dump local.sql`
    cmd: docker-compose exec -T cli bash -c 'drush sql-dump --ordered-dump' > "$@"